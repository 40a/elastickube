#!/bin/bash
#
# kube-scheduler -- startup script for kube-scheduler
#
# chkconfig: - 85 15
# processname: kube-scheduler
# pidfile: /var/run/kube-scheduler.pid
# description: kube-scheduler is a highly-available key-value store for shared configuration and service discovery
#
### BEGIN INIT INFO
# Provides: kube-scheduler
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop kube-scheduler
### END INIT INFO
#
#

BIN_DIR="/opt/kubernetes/v{{ KUBERNETES_VERSION }}/bin"
NAME="kube-scheduler"
PID_FILE="/var/run/${NAME}.pid"
PATH="/bin:/usr/bin:/sbin:/usr/sbin:${BIN_DIR}"
DAEMON="${BIN_DIR}/${NAME}"

start() {
    echo -n "Starting ${NAME} Daemon: "
    if [ -f "${PID_FILE}" ]; then
        echo ${NAME} already running: $(cat ${PID_FILE})
        exit 1;
    else
        $DAEMON \
        --master=http://localhost:{{ KUBE_INSECURE_API_PORT }} > /var/log/${NAME}.log 2>&1 & echo $! > "${PID_FILE}"
        echo $(cat ${PID_FILE})
    fi

}

stop() {
    if [ -f "${PID_FILE}" ]; then
        echo "Shutting down ${NAME} Daemon: $(cat ${PID_FILE})"
        pkill --pidfile ${PID_FILE}
        rm "${PID_FILE}"
    else
        echo "${NAME} is not running" 1>&2
    fi 
}

status() {
    if [ -f "${PID_FILE}" ]; then
        echo "${NAME} is running"
    else
        echo "${NAME} is stopped"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage:  {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $?
