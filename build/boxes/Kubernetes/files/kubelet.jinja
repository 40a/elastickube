#!/bin/bash
#
# kubelet -- startup script for kubelet
#
# chkconfig: - 85 15
# processname: kubelet
# pidfile: /var/run/kubelet.pid
# description: kubelet is a highly-available key-value store for shared configuration and service discovery
#
### BEGIN INIT INFO
# Provides: kubelet
# Required-Start: $local_fs $remote_fs $network
# Required-Stop: $local_fs $remote_fs $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: start and stop kubelet
### END INIT INFO
#
#

BIN_DIR="/opt/kubernetes/v{{ KUBERNETES_VERSION }}/bin"
NAME="kubelet"
PID_FILE="/var/run/${NAME}.pid"
PATH="/bin:/usr/bin:/sbin:/usr/sbin:${BIN_DIR}"
DAEMON="${BIN_DIR}/${NAME}"

start() {
    echo -n "Starting ${NAME} Daemon: "
    if [ -f "${PID_FILE}" ]; then
        echo ${NAME} already running: $(cat ${PID_FILE})
        exit 1;
    else
        $DAEMON \
        --address=0.0.0.0 \
        --port={{ KUBELET_PORT }} \
        --hostname_override={{ address.public or address.private }} \
{% if kubernetes %} 
        --api_servers=http://{{ kubernetes.address.public or kubernetes.address.private }}:{{ KUBE_INSECURE_API_PORT }} \
{% else %}
        --api_servers=http://localhost:{{ KUBE_INSECURE_API_PORT }} \
{% endif %}
        --allow_privileged=true \
        --logtostderr=true \
        --cadvisor_port=4194 \
        --cluster-dns={{ KUBELET_DNS }} \
        --cluster-domain={{ KUBELET_DOMAIN }} \
        --healthz_bind_address=0.0.0.0 \
        --healthz_port=10248 > /var/log/${NAME}.log 2>&1 & echo $! > "${PID_FILE}"
        echo $(cat ${PID_FILE})
    fi

}

stop() {
    if [ -f "${PID_FILE}" ]; then
        echo "Shutting down ${NAME} Daemon: $(cat ${PID_FILE})"
        pkill --pidfile ${PID_FILE}
        rm "${PID_FILE}"
    else
        echo "${NAME} is not running" 1>&2
    fi 
}

status() {
    if [ -f "${PID_FILE}" ]; then
        echo "${NAME} is running"
    else
        echo "${NAME} is stopped"
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    restart)
        stop
        start
        ;;
    *)
        echo "Usage:  {start|stop|status|restart}"
        exit 1
        ;;
esac
exit $?
